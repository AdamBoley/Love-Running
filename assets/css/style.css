@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&family=Oswald&display=swap');

* {
    margin: 0;
    padding: 0;
    border: none;
}

/* This is a style rule that targets ALL elements. * is an asterisk wildcard selector, and means "all elements". 
It is at the top of the page and is also a very generic style rule so it is easily overridden
It removes all default margin, padding and border properties organic to various elements and as such allows for finer control over box-model measurements*/

body {
    font-family: Lato, sans-serif;
    font-weight: 300;
    color: #3a3a3a;
}

h1, h2 {
    font-family: Oswald, sans-serif;
    text-transform: uppercase;
    letter-spacing: 4px;
    color: #252525;
}

#logo {
    float: left;
    font-size: 280%;
    margin-left: 30px;
}

#menu {
    font-size: 110%;
    letter-spacing: 4px;
    float: right;
}

#menu, #logo {
    line-height: 75px;
}

#menu li {
    display: inline-block;
    list-style-type: none;
    margin-right: 30px;
}

#menu a {
    text-decoration: none;
    color: inherit;

}

#menu a:hover {
    border-bottom: 1px solid #3a3a3a;
}

.active {
    border-bottom: 1px solid #3a3a3a;
}

#hero-image {
    height: 600px;
    width: 100%;
    background: url('../images/hero-image.webp') no-repeat center center;

    animation-name: hero-zoom;
    animation-duration: 5s;
    animation-fill-mode: forwards;
}

/*The animation properties link the #hero-image style rule to the @keyframes rule - the hero-zoom is common to both, set the duration of the "zoom" (see comment below)
and the fill-mode property of forwards keeps the image "zoomed-in" - it stays at the end state*/

#hero-outer {
    height: 600px;
    width: 100%;
    clear: both;
    overflow: hidden;
    /* overflow: hidden and clear: both do the same thing - reset the page after the float: left and float: right of the heading and navigation elements
    But clear: both on its own expands the container size when the image "zooms-in". Overflow: hidden prevents this, and keeps the container to the same size - 
    it hides the overflow caused by the zoom*/
    position: relative;
    /*Position: relative forces the child div box called #cover-text to be placed relative to the #hero-outer. This means it will fully lay over the background image
    */
}


@keyframes hero-zoom {
    from {
        transform: scale(1);
    }

    to {
        transform: scale(1.1);
    }
}
/*The Keyframes style rule is used to create animations. This particular rule creates a pseudo-zoom effect
The image isn't actually zooming in, it's just being increased in size. However, the height and width of the image are fixed, so the image appears to be zooming in
The image is "zooming-in" 10%*/

#cover-text-box, #cover-text-box h2 {
    color: #fff;

}

#cover-text-box {
    font-size: 130%;
    font-family: Oswald, sans-serif;
    text-transform: uppercase;
    letter-spacing: 4px;
    /*This properties define the text placed in the box*/

    width: 300px;
    height: 200px;
    /*This properties define the dimensions of the box*/

    padding-top: 40px;
    padding-left: 10px;
    /*These properties define the padding of the box, so that the text sits more centrally*/
    
    background-color: rgba(241, 109, 107, 0.7);
    /*The background color property uses rgba values here so that the opacity can be defined. This allows the hero-image to still be visible through the box. 
    The colour is a subtle contrast - the box should sit over the man on the left's blue jacket, and the text has been made white*/

    bottom: 30px;
    right: 150px;
    /*These properties set the position relative to the parent div. Since the parent div and the hero-image have the same dimensions, the text-box will overlay the image*/

    position: absolute;
    /*The positon: absolute allows the text-box to be positioned, since the parent section has been given position: absolute*/
}

/*Club ethos*/

#club-ethos {
    height: 600px;
}

#left-about {
    padding-top: 30px;
    width: 33%;
    float: left;
    
}

#right-about {
    padding-top: 30px;
    width: 33%;
    float: right;
    
}

#center-about {
    width: 33%;
    margin: 0 auto;
    background-color: green;
}

.about-content {
    width: 60%;
    margin-bottom: 50px;
    line-height: 20px;
    clear: both;

}

.float-left {
    float: left;
}

.float-right {
    float: right;
}

.text-right {
    text-align: right;
}

hr {
    border-top: 1px solid #3a3a3a;
    width: 100%;
    margin: 5px 0;
}